name: "release"

on:
  workflow_dispatch:
  workflow_run:
    workflows:
      - auto-release
    types:
      - completed
    branches:
      - main

jobs:
  state:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' || github.event.workflow_run.conclusion == 'success'
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4
      - name: Set up environment
        uses: ./.github/actions/setup
      - id: state
        name: Compute release state
        uses: actions/github-script@v7
        with:
          result-encoding: string
          script: |
            const { execSync } = require('node:child_process');
            const extractNotes = require('./scripts/release/extract-release-notes.js');
            const isReleaseCommit = /^chore\(release\):/m.test(execSync('git log -1 --pretty=%B', { encoding: 'utf8' }));
            const version = require('./package.json').version;
            const notes = extractNotes({ version }) || '';
            core.setOutput('is_release_commit', String(isReleaseCommit));
            core.setOutput('local_version', version);
            core.setOutput('notes', notes);
    outputs:
      local_version: ${{ steps.state.outputs.local_version }}
      notes: ${{ steps.state.outputs.notes }}
      is_release_commit: ${{ steps.state.outputs.is_release_commit }}

  release:
    runs-on: ubuntu-latest
    needs: state
    if: needs.state.outputs.is_release_commit == 'true'
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.CUSTOM_TOKEN }}
          tag_name: v${{ needs.state.outputs.local_version }}
          name: Release v${{ needs.state.outputs.local_version }}
          body: |
            ${{ needs.state.outputs.notes }}
          draft: false
          prerelease: false

  publish:
    runs-on: ubuntu-latest
    needs: state
    if: needs.state.outputs.is_release_commit == 'true'
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4
      - name: Setup
        uses: ./.github/actions/setup
      - name: Publish to npm
        working-directory: ./
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_ACCESS_TOKEN }}
        run: npm run publish-to-npm
